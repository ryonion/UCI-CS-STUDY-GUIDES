week 9 - FILE I/O & exception handling.


// -----------------------get doubles from a file-----------------------

// 先创建一个File obj
File inputFile = new File("input.txt");

// 放进 Scanner obj，Scanner 需要 import java.util.Scanner
Scanner in = new Scanner(inputFile);

// 一个简单的loop读取文件里的double类型
// Scanner.nextDouble() 可以获取文件里面下一个double类型，如果存在的话，不存在会error
// Scanner.hasNextDouble() 可以检查文件里面还有没有下一个double，可以用它避免 nextDouble() 产生的error

while (in.hasNextDouble())
{
    double value = in.nextDouble();
    do_something_with(value);
}

// ----------------------- "nextSomething" other than double ------------------
// The next method returns any sequence of characters that is not  white space.
// White space includes: spaces, tab characters, and the newline  characters that separate lines.

String input = in.next();  

// experiment with 'nextLine' & 'hasNextLine'

// parseInt turns a string contains an int into an int 
int populationValue = Integer.parseInt("33333");
System.out.println(populationValue);


// --------------------------delimeter------------------------
// 设定以什么来分隔每个需要读取的元素， 例如文件内容:  1.22, 1.34, 55.66....
// 把delimiter 设定为 "," in.next 会读到    '1.22' -> '1.34' -> '55.66' ....
// 如果设定为 "."         in.next 会读到    '1' -> '22,' -> '1' -> '34' ....   
// 如果 in.useDelimiter("") , in.next 会读到包含单个字母的string  

in.useDelimiter("[^A-Za-z]+");
double value = in.nextDouble();


// -----------------------write doubles to a file-----------------------


// printwrite 负责写入文件， scanner负责读取文件 
PrintWriter out = new PrintWriter("output.txt");

//System.out.println 会输出到屏幕，PrintWriter.println 则是输出到文件里
out.println("Hello, World!");  
out.printf("Total: %8.2f\n", total);

// ----------------------close the file when you are done using it----------------------------

in.close();
out.close();

// -------------------formatting output -------------------
// Formats a floating-point number  
// The field that is ten characters wide.
// Spaces appear to the left and the value to the right

System.out.printf(“%10.2f”, 55.555555);  
// output will be like "     55.55", in python -> print(“%10.2f”%(55.55555))


// ----------------command line arguments -----------------------------
// cmd line arguments are just arguments to the main function, you plug in the arguments before the main function fires.
// Your program receives its command line arguments in the args parameter of the main method

// -----------------------exception handling ----------------------------
// to make your program more robust
// you can also define your own exceptions.
// throwing exceptions my help identifying the problems.

try
{
    // do something stupid like dividing by zero, later "catch" the exception and handle it
}
catch (IOException exception)
{
    exception.printStackTrace();
}
catch (NumberFormatException exception)
{
    System.out.println(exception.getMessage());
}
catch SomeException
{
    // exception handling... e.g. prompt input again, redo something, reset variables... to make things greate again.
}


try{
    // do something
}
finally{
    // fianlly always executes.
}






